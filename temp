import React, { useEffect, useState } from "react";
import styled from "styled-components";
import router from "next/router";
import {
  BlogItemsWrapper,
  StyledH1,
  StyledH2,
  BlogItem,
} from "../../components";
import { FeaturedBlogItem } from "../../components/FeaturedBlogItem";
import { UserDataType } from "../../data/userData";
import { formatPostsData } from "../../lib/posts";
import { BlogType } from "../../lib/types";
import { useQuery } from "@apollo/client";
import { GET_ALL_POSTS } from "../../lib/query";

const StyledWrapper = styled.div`
  min-height: calc(100vh - 120px);
  margin-top: 66px;

  .page-title {
    margin-bottom: 50px;
  }

  .show-more-wrap {
    display: flex;
    justify-content: center;
    margin-top: 50px;
  }
`;

interface BlogPageProps {
  userData: UserDataType;
  posts: BlogType[];
}

const Blog: React.FunctionComponent<BlogPageProps> = () => {
  const [posts, setPosts] = useState<BlogType[]>([]);
  const [pageInfo, setPageInfo] = useState<{
    hasNextPage: boolean;
    endCursor: string;
  }>();
  const [loadingMore, setLoadingMore] = useState<boolean>(false);
  const { loading, error, data, fetchMore } = useQuery(GET_ALL_POSTS, {
    variables: {
      first: 1,
    },
  });

  const handleNavigateToDetail = (slug: string) => {
    router.push(`/blogs/${slug}`);
  };

  // TODO: Use TypePolicy to merge and normalise the post/fetchmore data
  // https://www.apollographql.com/docs/react/pagination/core-api/
  const handlePostsDataUpdate = (data: any) => {
    if (!data) {
      return;
    }
    console.log(data);

    setPosts((current) => [...current, ...formatPostsData(data?.posts?.nodes)]);
    setPageInfo(() => ({
      endCursor: data?.posts?.pageInfo?.endCursor,
      hasNextPage: data?.posts?.pageInfo?.hasNextPage,
    }));
    setLoadingMore(false);
  };

  useEffect(() => {
    handlePostsDataUpdate(data);
  }, [data]);

  const handleShowMore = async () => {
    setLoadingMore(true);
    const { data: moreData } = await fetchMore({
      updateQuery
      variables: {
        first: 1, // Number of posts to getch at a time.
        // https://master--wpgraphql-docs.netlify.app/getting-started/posts/#after
        after: pageInfo?.endCursor,
      },
    });
    // handlePostsDataUpdate(moreData);
  };

  return (
    <StyledWrapper className="">
      <StyledH1 className="page-title">Blogs</StyledH1>

      <section>
        <StyledH2 className="page-title">Featured</StyledH2>
        {!!posts?.length && (
          <div>
            <FeaturedBlogItem
              onClick={handleNavigateToDetail}
              {...posts?.[0]}
            />
          </div>
        )}
      </section>

      <section>
        <StyledH2 className="page-title">Others Blogs</StyledH2>

        <BlogItemsWrapper>
          {posts?.map((post, index) => (
            <BlogItem onClick={handleNavigateToDetail} key={index} {...post} />
          ))}
        </BlogItemsWrapper>
      </section>

      {pageInfo?.hasNextPage && (
        <div className="show-more-wrap">
          <button
            className="btn btn-outline-secondary"
            onClick={() => handleShowMore()}
          >
            {loadingMore ? 'Loading...' : 'Show more'}
          </button>
        </div>
      )}
    </StyledWrapper>
  );
};

export default Blog;
